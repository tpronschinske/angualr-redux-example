{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/store/actions.ts","webpack:///./src/app/store/store.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;ACZA,oKAAoK,oBAAoB,4BAA4B,eAAe,mI;;;;;;;;;;;ACAnO,+DAA+D,+H;;;;;;;;;;;;;;;;;;;ACArB;AACa;AAEH;AAQpD;IAUE,sBAAmB,OAA2B;QAA3B,YAAO,GAAP,OAAO,CAAoB;IAE9C,CAAC;IAED,gCAAS,GAAT;QACE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAC,IAAI,EAAE,gEAAiB,CAAC,SAAS,EAAC,CAAC,CAAC;IAC7D,CAAC;;gBAN2B,4DAAO;;IALkB;QAApD,mEAAM,CAAC,UAAC,CAAY,IAAK,QAAC,CAAC,WAAW,CAAC,WAAW,EAAzB,CAAyB,CAAC;oDAAY;IAC3B;QAApC,mEAAM,CAAC,UAAC,CAAY,IAAK,QAAC,CAAC,OAAO,EAAT,CAAS,CAAC;+CAAO;IANhC,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,uIAAmC;;SAEpC,CAAC;OACW,YAAY,CAkBxB;IAAD,mBAAC;CAAA;AAlBwB;;;;;;;;;;;;;;;;;;;;;;;;;;ACXiC;AACN;AAEL;AACe;AAClB;AACyB;AAC9B;AAC+D;AAoBtG;IACE,mBAAmB,OAA2B;QAA3B,YAAO,GAAP,OAAO,CAAoB;QAC5C,IAAI,MAAM,GAAG,+DAAS,EAAE,CAAC,CAAC,CAAC,CAAC,iEAAY,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACjD,OAAO,CAAC,cAAc,CAAC,wDAAW,EAAE,yDAAY,EAAE,MAAM,CAAC,CAAC;IAC5D,CAAC;;gBAH2B,4DAAO;;IADxB,SAAS;QAhBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,mDAAO;gBACP,uEAAa;gBACb,4DAAY;gBACZ,kEAAa;aACd;YACD,SAAS,EAAE;gBACT,EAAE,OAAO,EAAE,6DAAa,EAAE,QAAQ,EAAE,GAAG,EAAE;gBACzC,EAAE,OAAO,EAAE,gEAAgB,EAAE,QAAQ,EAAE,oEAAoB,EAAE;aAC9D;YACD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAKrB;IAAD,gBAAC;CAAA;AALqB;;;;;;;;;;;;;AC3BtB;AAAA;AAAA;AAAuD;AAEvD,IAAM,SAAS,GAAW,EAAE,CAAC;AAEtB,IAAM,OAAO,GAAG,4DAAY,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,mBAAmB,EAAE,QAAQ,EAAE,CAAC,CAAC;;;;;;;;;;;;;ACLvI;AAAA;AAAA,IAAY,iBAEX;AAFD,WAAY,iBAAiB;IAC3B,4CAAuB;AACzB,CAAC,EAFW,iBAAiB,KAAjB,iBAAiB,QAE5B;;;;;;;;;;;;;ACFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACZ;AAY3B,IAAM,YAAY,GAAc;IACrC,OAAO,EAAE,CAAC;IACV,WAAW,EAAE;QACX,WAAW,EAAE,IAAI;KAClB;IACD,WAAW,EAAE,IAAI;CAClB;AAGM,SAAS,WAAW,CAAC,KAAgB,EAAE,MAAM;IAClD,QAAQ,MAAM,CAAC,IAAI,EAAC;QAClB,KAAK,0DAAiB,CAAC,SAAS;YAC9B,OAAO,uDAAO,CAAC,KAAK,EAAE;gBACpB,OAAO,EAAE,KAAK,CAAC,OAAO,GAAG,CAAC;gBAC1B,WAAW,EAAE,IAAI,IAAI,EAAE;aACxB,CAAC,CAAC;KACN;IAED,OAAO,KAAK,CAAC;AACf,CAAC;;;;;;;;;;;;;AChCD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"\\r\\n<div class=\\\"container\\\">\\r\\n  <!-- <router-outlet></router-outlet> -->\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-body\\\">\\r\\n      {{permission | async}}\\r\\n      <p class=\\\"h5\\\">{{count | async}}</p>\\r\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"increment()\\\">Increment</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\r\nimport { NgRedux, select } from '@angular-redux/store';\r\nimport { IAppState } from './store/store';\r\nimport { ReduxStoreActions } from './store/actions';\r\nimport { Map } from 'immutable';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  // select decorator gets name of field in the store. must be matched from componeent to store\r\n  //@select() counter: number;\r\n  // select decorator gets name of field in the store. can pass the matched one into select to rename in view\r\n  //@select('counter') count;\r\n  @select((s: IAppState) => s.permissions.CanViewPage) permission;\r\n  @select((s: IAppState) => s.counter) count;\r\n\r\n\r\n\r\n  constructor(public ngRedux: NgRedux<IAppState>){\r\n\r\n  }\r\n\r\n  increment(){\r\n    this.ngRedux.dispatch({type: ReduxStoreActions.Increment});\r\n  }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, isDevMode } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { NgRedux, NgReduxModule } from '@angular-redux/store';\nimport { createLogger } from 'redux-logger';\nimport { IAppState, InitialState, rootReducer } from './store/store';\nimport { routing } from './app.routes';\nimport { CommonModule, APP_BASE_HREF, LocationStrategy, HashLocationStrategy } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    routing,\n    BrowserModule,\n    CommonModule,\n    NgReduxModule\n  ],\n  providers: [\n    { provide: APP_BASE_HREF, useValue: '/' },\n    { provide: LocationStrategy, useClass: HashLocationStrategy }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor(public ngRedux: NgRedux<IAppState>){\n    let logger = isDevMode() ? [createLogger()] : [];\n    ngRedux.configureStore(rootReducer, InitialState, logger);\n  }\n}\n\n\n","\nimport { Routes, RouterModule } from '@angular/router';\n\nconst appRoutes: Routes = [];\n\nexport const routing = RouterModule.forRoot(appRoutes, { useHash: true, initialNavigation: 'enabled', onSameUrlNavigation: 'reload' });\n","export enum ReduxStoreActions {\r\n  Increment = \"Increment\"\r\n}\r\n","import { ReduxStoreActions } from './actions';\r\nimport { tassign } from 'tassign';\r\n\r\n\r\n// determines shape of the store and properties\r\nexport interface IAppState {\r\n  counter: number;\r\n  permissions?: {\r\n    CanViewPage: boolean\r\n  },\r\n  lastUpdated: Date\r\n}\r\n\r\nexport const InitialState: IAppState = {\r\n  counter: 0,\r\n  permissions: {\r\n    CanViewPage: true\r\n  },\r\n  lastUpdated: null\r\n}\r\n\r\n\r\nexport function rootReducer(state: IAppState, action): IAppState{\r\n  switch (action.type){\r\n    case ReduxStoreActions.Increment:\r\n      return tassign(state, {\r\n        counter: state.counter + 1,\r\n        lastUpdated: new Date()\r\n      });\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}